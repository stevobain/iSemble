<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Room Request w/ iSemble">95c3ce7883d112108c5d91d6feaad3ce</cat_item>
        <cat_variable>IO:b85bab9583d112108c5d91d6feaad3e3</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Fetch Unavailable Times - Start Time</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
    var startTime = g_form.getValue('start_time');
    var endTime = g_form.getValue('end_time');

    if (endTime && startTime >= endTime) {
        g_form.clearValue('start_time');
        g_form.showErrorBox('start_time', 'The start date/time must be before the end date/time.');
    }

    fetchUnavailableTimes(startTime, endTime);
}

function fetchUnavailableTimes(startTime, endTime) {
    var room = g_form.getValue('room');

    var ga = new GlideAjax('iSembleUtils');
    ga.addParam('sysparm_name', 'getUnavailableTimes');

    if (!startTime || !endTime) {
        return;
    }

    ga.addParam('sysparm_room', room);
    ga.addParam('sysparm_start_time', startTime);
    ga.addParam('sysparm_end_time', endTime);

    ga.getXMLAnswer(function(response) {
        var unavailableTimes = JSON.parse(response);

        if (unavailableTimes.length > 0) {
            g_form.clearValue('start_time');
            g_form.clearValue('end_time');
            g_form.showErrorBox('end_time', 'The selected time overlaps with an existing reservation.');
        }
    });
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-28 18:28:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7aef159583e112108c5d91d6feaad3f7</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Fetch Unavailable Times - Start Time</sys_name>
        <sys_overrides/>
        <sys_package display_value="iSemble" source="x_1394569_isemble">bb5b608883c55210ffcebfc6feaad363</sys_package>
        <sys_policy/>
        <sys_scope display_value="iSemble">bb5b608883c55210ffcebfc6feaad363</sys_scope>
        <sys_update_name>catalog_script_client_7aef159583e112108c5d91d6feaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-29 18:48:25</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
